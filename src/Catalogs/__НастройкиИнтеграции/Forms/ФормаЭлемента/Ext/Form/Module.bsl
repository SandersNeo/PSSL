#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	ОбщегоНазначения = Неопределено;
	Если ОбщегоНазначения <> Неопределено Тогда
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка);
	
	Если СтруктураНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого КлючИЗначение Из СтруктураНастроек Цикл
		НоваяСтрока = СписокНастроек.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, КлючИЗначение.Значение);
	КонецЦикла;
	
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	КонецЕсли;
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	ОбщегоНазначения = Неопределено;
	Если ОбщегоНазначения <> Неопределено Тогда
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураНастроек = Новый Структура();
	
	Для Каждого ТекСтрока Из СписокНастроек Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрока.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Настройка = Новый Структура("ИмяНастройки, Значение");
		ЗаполнитьЗначенияСвойств(Настройка, ТекСтрока);
		СтруктураНастроек.Вставить(ТекСтрока.ИмяНастройки, Настройка);
	КонецЦикла;
	
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, СтруктураНастроек);
	
	УстановитьПривилегированныйРежим(Ложь);
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	КонецЕсли;
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьОбщие(Команда)
	
	ОбщиеЗначения = ПолучитьОбщиеЗначения();
	
	Если СписокНастроек.Количество() Тогда
		ПроизвестиПроверкуСуществованияРеквизитов(ОбщиеЗначения);
	КонецЕсли;
	
	Для Каждого ТекЭлемент Из ОбщиеЗначения Цикл
		
		НоваяСтрока = СписокНастроек.Добавить();
		НоваяСтрока.ИмяНастройки = ТекЭлемент;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗначения(Команда)
	
	Пометка = НЕ Элементы.СписокНастроекПоказатьЗначения.Пометка;
	Элементы.СписокНастроекПоказатьЗначения.Пометка = Пометка;
	Элементы.СписокНастроекЗначениеПредставление.Видимость = Пометка;
	Элементы.СписокНастроекЗначение.Видимость = НЕ Пометка;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОбщиеЗначения()
	
	Массив = Новый Массив;
	Массив.Добавить("Логин");
	Массив.Добавить("Пароль");
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура ПроизвестиПроверкуСуществованияРеквизитов(ПроверяемыеЗначения)
	
	Сч = ПроверяемыеЗначения.Количество() - 1;
	
	Пока Сч >= 0 Цикл
		НайденныеСтроки = СписокНастроек.НайтиСтроки(Новый Структура("ИмяНастройки", ПроверяемыеЗначения[Сч]));
		Если НайденныеСтроки.Количество() Тогда
			ПроверяемыеЗначения.Удалить(Сч);
		КонецЕсли;
		Сч = Сч - 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции