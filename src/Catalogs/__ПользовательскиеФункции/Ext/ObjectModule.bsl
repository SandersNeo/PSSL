#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ДанныеЗаполнения.Свойство("Наименование" , Наименование);
			ДанныеЗаполнения.Свойство("Контекст", Контекст);
			ДанныеЗаполнения.Свойство("КодПодпрограммы", КодПодпрограммы);
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(Контекст) Тогда
			Контекст = Перечисления.__КонтекстыВыполненияПользовательскихФункций.Произвольный;
		КонецЕсли; 
		
		Если ПустаяСтрока(КодПодпрограммы) Тогда
			КодПодпрограммы = КодПодпрограммы + Символы.ПС + Символы.ПС + "Результат = ";
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	ОбщегоНазначения = Неопределено;
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
	// Проверка имен параметров
	СтрВрем = Новый Структура;
	
	Для каждого СтрокаТаблицы Из Переменные Цикл
		
		НомСтроки = СтрокаТаблицы.НомерСтроки-1;
		
		Попытка
			флЕстьСвойство = СтрВрем.Свойство(СтрокаТаблицы.Имя);
		Исключение
			флЕстьСвойство = Ложь;
		КонецПопытки;
		
		Если НЕ флЕстьСвойство Тогда
			
			Попытка
				СтрВрем.Вставить(СтрокаТаблицы.Имя);
			Исключение
				
				Отказ = Истина;
				ТекстСообщения = НСтр("ru='Обнаружено некорректное имя ""%1"" в таблице ""Переменные"".';
									  |en='Found an incorrect name ""%1"" in table ""Variables.""'");
				ТекстСообщения = СтрШаблон(ТекстСообщения,СтрокаТаблицы.Имя);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Переменные["+НомСтроки+"].Имя");				
			КонецПопытки;
		Иначе
			
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='Обнаружено дублирующееся имя ""%1"" в таблице ""Переменные"".';
								  |en='Found a duplicate name ""%1"" in the table ""Variables.""'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаТаблицы.Имя);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Переменные["+НомСтроки+"].Имя");
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		// В случае выполнения обмена данными не производить проверку.
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры // ПриЗаписи()	

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ЭтоГруппа Тогда
		Релиз = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте.';en='Invalid object call on client'");
#КонецЕсли