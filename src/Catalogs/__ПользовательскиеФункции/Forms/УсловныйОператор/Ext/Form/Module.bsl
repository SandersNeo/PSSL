
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Режим", Режим);
	
	Если Параметры.Свойство("Переменные") Тогда
		Для Каждого ТекущаяПеременна Из Параметры.Переменные Цикл
			СписокПеременных.Добавить(ТекущаяПеременна.Значение);
		КонецЦикла;
	КонецЕсли;
	
	НадписьСинтаксис = НСтр("ru = '?(<ЛогическоеВыражение>,<ВыражениеЕслиИстина>,<ВыражениеЕслиЛожь>)';
							|en = '?(<BolleanExpression>,<ExpressionIfTrue>,<ExpressionIfFalse>)'");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЛогическоеВыражениеПриИзменении(Элемент)
	
	ОбновитьВыражениеРезультат();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛогическоеВыражениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПоля("ЛогическоеВыражение");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеИстинаПриИзменении(Элемент)
	
	ОбновитьВыражениеРезультат();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеИстинаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПоля("ВыражениеИстина");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеЛожьПриИзменении(Элемент)
	
	ОбновитьВыражениеРезультат();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеЛожьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПоля("ВыражениеЛожь");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ОбновитьВыражениеРезультат();
	Закрыть(ВыражениеРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция выполняет обновление результирующего выражения.
// 
&НаКлиенте
Процедура ОбновитьВыражениеРезультат()
	
	ВыражениеРезультат = "?("+ЛогическоеВыражение + ", " + ВыражениеИстина + ", " + ВыражениеЛожь + ");"
	
КонецПроцедуры // ОбновитьВыражениеРезультат()

// Функция открывает помошник для выбора поля.
// 
&НаКлиенте
Процедура ОткрытьФормуВыбораПоля(ИмяПриемника)
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Режим", Режим);
	
	Если СписокПеременных.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("Переменные",СписокПеременных.ВыгрузитьЗначения());
	КонецЕсли; 
	
	РежимОкна = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ДопПараметры = Новый Структура("ИмяПриемника", ИмяПриемника);
	Оповещение = Новый ОписаниеОповещения("ВыборПоляЗавершение", ЭтотОбъект, ДопПараметры);
	ОткрытьФорму("ОбщаяФорма.__ФормаВыбораПоля",ПараметрыФормы, ЭтотОбъект,,,, Оповещение,РежимОкна);
	
 КонецПроцедуры // ОткрытьФормуВыбораПоля()

// Процедура обработчик оповещения "ВыборПоляЗавершение".
// 
// Параметры:
// РезСтруктура - КодВозвратаДиалога.
// ДополнительныеДанные - Структура.
// 
&НаКлиенте 
Процедура ВыборПоляЗавершение(РезСтруктура, ДополнительныеДанные) Экспорт

	Если ТипЗнч(РезСтруктура) = Тип("Структура") Тогда
		Элементы[ДополнительныеДанные.ИмяПриемника].ВыделенныйТекст = РезСтруктура.Имя;
		ОбновитьВыражениеРезультат();
	КонецЕсли;
	
КонецПроцедуры // ВыборПоляЗавершение 

#КонецОбласти
